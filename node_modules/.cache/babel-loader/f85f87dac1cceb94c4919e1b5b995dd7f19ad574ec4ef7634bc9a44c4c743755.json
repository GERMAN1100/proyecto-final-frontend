{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\front\\\\react\\\\tp_final\\\\src\\\\components\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport getFinalBudget from '../Helper';\nimport datos from '../datos.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormWrapper = styled.div`\n  max-width: 600px;\n  margin: auto;\n  display: flex;\n  justify-content: space-between;\n`;\n_c = FormWrapper;\nconst PlanContainer = styled.div`\n  background-color: #34bfb2;\n  color: #fff;\n  margin-bottom: 20px;\n  padding: 20px;\n  width: 100%; \n`;\n_c2 = PlanContainer;\nconst ResetButton = styled.button`\n  background-color: #00838f;\n  color: #fff;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  margin-top: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #26c6da;\n  }\n`;\n_c3 = ResetButton;\nconst Form = ({\n  setBudgetObj\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    propertyType: '',\n    location: '',\n    squareMeters: '',\n    plan: 'basic'\n  });\n  const [error, setError] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const insurancePlans = {\n    basic: {\n      name: 'Plan Básico',\n      coverage: ['Cobertura Estándar:', 'Daños Estructurales: Cubre daños a la estructura de la propiedad debido a eventos como incendios, explosiones, inundaciones, etc.', 'Responsabilidad Civil: Protege contra reclamaciones de terceros por daños causados por la propiedad.', 'Asistencia 24/7:', 'Servicio de Emergencia: Asistencia telefónica para emergencias relacionadas con la propiedad.', 'Beneficios Adicionales:', 'Cobertura contra Incendios: Protección específica contra incendios.'],\n      costMultiplier: 1.2\n    },\n    complete: {\n      name: 'Plan Completo',\n      coverage: ['Cobertura Ampliada:', 'Daños Estructurales: Incluye cobertura para daños estructurales y colaterales más amplios.', 'Cobertura contra Robos: Protección contra robos y vandalismo.', 'Daños por Fenómenos Naturales: Incluye eventos como terremotos, tormentas, y otros desastres naturales.', 'Responsabilidad Extendida:', 'Responsabilidad Civil Ampliada: Mayor cobertura para reclamaciones de terceros.', 'Asistencia 24/7 con Servicios Adicionales:', 'Servicio de Reparaciones Rápidas: Coordinación de servicios de reparación con profesionales acreditados.', 'Asesoría Legal: Consultas legales relacionadas con la propiedad.'],\n      costMultiplier: 1.5\n    }\n  };\n  const {\n    propertyType,\n    location,\n    squareMeters,\n    plan\n  } = formData;\n  const fieldHandle = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const submitForm = e => {\n    e.preventDefault();\n    if (propertyType.trim() === '' || location.trim() === '' || squareMeters.trim() === '') {\n      setError(true);\n      return;\n    }\n    setError(false);\n    const selectedProperty = datos.find(item => item.tipo === propertyType && (item.categoria === 'ubicacion' || item.tipo === location));\n    const factor = selectedProperty ? selectedProperty.factor : 1.0;\n    const currentSelectedPlan = insurancePlans[plan] || insurancePlans.basic;\n    const baseCost = getFinalBudget(2000, propertyType, location) * factor * parseFloat(squareMeters) * 35.86;\n    const totalCost = baseCost * currentSelectedPlan.costMultiplier;\n    setSelectedPlan(currentSelectedPlan);\n    setBudgetObj({\n      formData,\n      budgetAmount: totalCost,\n      selectedPlan: currentSelectedPlan\n    });\n\n    // Aquí comienza la parte del localStorage\n    const historialCotizaciones = JSON.parse(localStorage.getItem('historialCotizaciones')) || [];\n    const isDuplicate = historialCotizaciones.some(item => item.propiedad === propertyType && item.ubicacion === location && item.metrosCuadrados === parseFloat(squareMeters) && item.poliza === currentSelectedPlan.name);\n    if (!isDuplicate) {\n      historialCotizaciones.push({\n        fechaCotizacion: new Date().toLocaleString(),\n        propiedad: propertyType,\n        ubicacion: location,\n        metrosCuadrados: parseFloat(squareMeters),\n        poliza: {\n          name: currentSelectedPlan.name,\n          cost: totalCost,\n          coverage: currentSelectedPlan.coverage\n        }\n      });\n      localStorage.setItem('historialCotizaciones', JSON.stringify(historialCotizaciones));\n    }\n    // Aquí termina la parte del localStorage\n\n    setFormData({\n      propertyType: '',\n      location: '',\n      squareMeters: '',\n      plan: 'basic'\n    });\n  };\n  const propertyTypes = datos.filter(item => item.categoria === 'propiedad').map(item => item.tipo);\n  const locationTypes = datos.filter(item => item.categoria === 'ubicacion').map(item => item.tipo);\n  const resetForm = () => {\n    setFormData({\n      propertyType: '',\n      location: '',\n      squareMeters: '',\n      plan: 'basic'\n    });\n    setSelectedPlan(null);\n    setBudgetObj(null);\n  };\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tipo de Propiedad:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"propertyType\",\n          value: propertyType,\n          onChange: fieldHandle,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Seleccione --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), propertyTypes.map(propertyType => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: propertyType,\n            children: propertyType\n          }, propertyType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ubicaci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"location\",\n          value: location,\n          onChange: fieldHandle,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Seleccione --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), locationTypes.map(locationType => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: locationType,\n            children: locationType\n          }, locationType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Metros Cuadrados:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"squareMeters\",\n          value: squareMeters,\n          onChange: fieldHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Plan de Seguro:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlanContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"plan\",\n              value: \"basic\",\n              checked: plan === 'basic',\n              onChange: fieldHandle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Plan B\\xE1sico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), \" \", insurancePlans.basic.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cobertura:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: insurancePlans.basic.coverage.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlanContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"plan\",\n              value: \"complete\",\n              checked: plan === 'complete',\n              onChange: fieldHandle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Plan Completo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), \" \", insurancePlans.complete.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cobertura:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: insurancePlans.complete.coverage.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cotizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error: Completar los campos del formulario.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 18\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {\n      onClick: resetForm,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"Wr83Emo9PKq8z7Fa0yXiUfNjp34=\");\n_c4 = Form;\nexport default Form;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FormWrapper\");\n$RefreshReg$(_c2, \"PlanContainer\");\n$RefreshReg$(_c3, \"ResetButton\");\n$RefreshReg$(_c4, \"Form\");","map":{"version":3,"names":["React","useState","styled","getFinalBudget","datos","jsxDEV","_jsxDEV","FormWrapper","div","_c","PlanContainer","_c2","ResetButton","button","_c3","Form","setBudgetObj","_s","formData","setFormData","propertyType","location","squareMeters","plan","error","setError","selectedPlan","setSelectedPlan","insurancePlans","basic","name","coverage","costMultiplier","complete","fieldHandle","e","value","target","submitForm","preventDefault","trim","selectedProperty","find","item","tipo","categoria","factor","currentSelectedPlan","baseCost","parseFloat","totalCost","budgetAmount","historialCotizaciones","JSON","parse","localStorage","getItem","isDuplicate","some","propiedad","ubicacion","metrosCuadrados","poliza","push","fechaCotizacion","Date","toLocaleString","cost","setItem","stringify","propertyTypes","filter","map","locationTypes","resetForm","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","locationType","type","checked","index","onClick","_c4","$RefreshReg$"],"sources":["C:/Users/User/Desktop/front/react/tp_final/src/components/Form.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport getFinalBudget from '../Helper';\r\nimport datos from '../datos.json';\r\n\r\nconst FormWrapper = styled.div`\r\n  max-width: 600px;\r\n  margin: auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst PlanContainer = styled.div`\r\n  background-color: #34bfb2;\r\n  color: #fff;\r\n  margin-bottom: 20px;\r\n  padding: 20px;\r\n  width: 100%; \r\n`;\r\n\r\nconst ResetButton = styled.button`\r\n  background-color: #00838f;\r\n  color: #fff;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: none;\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #26c6da;\r\n  }\r\n`;\r\n\r\nconst Form = ({ setBudgetObj }) => {\r\n  const [formData, setFormData] = useState({\r\n    propertyType: '',\r\n    location: '',\r\n    squareMeters: '',\r\n    plan: 'basic',\r\n  });\r\n\r\n  const [error, setError] = useState(false);\r\n  const [selectedPlan, setSelectedPlan] = useState(null);\r\n\r\n  const insurancePlans = {\r\n    basic: {\r\n      name: 'Plan Básico',\r\n      coverage: [\r\n        'Cobertura Estándar:',\r\n        'Daños Estructurales: Cubre daños a la estructura de la propiedad debido a eventos como incendios, explosiones, inundaciones, etc.',\r\n        'Responsabilidad Civil: Protege contra reclamaciones de terceros por daños causados por la propiedad.',\r\n        'Asistencia 24/7:',\r\n        'Servicio de Emergencia: Asistencia telefónica para emergencias relacionadas con la propiedad.',\r\n        'Beneficios Adicionales:',\r\n        'Cobertura contra Incendios: Protección específica contra incendios.',\r\n      ],\r\n      costMultiplier: 1.2,\r\n    },\r\n    complete: {\r\n      name: 'Plan Completo',\r\n      coverage: [\r\n        'Cobertura Ampliada:',\r\n        'Daños Estructurales: Incluye cobertura para daños estructurales y colaterales más amplios.',\r\n        'Cobertura contra Robos: Protección contra robos y vandalismo.',\r\n        'Daños por Fenómenos Naturales: Incluye eventos como terremotos, tormentas, y otros desastres naturales.',\r\n        'Responsabilidad Extendida:',\r\n        'Responsabilidad Civil Ampliada: Mayor cobertura para reclamaciones de terceros.',\r\n        'Asistencia 24/7 con Servicios Adicionales:',\r\n        'Servicio de Reparaciones Rápidas: Coordinación de servicios de reparación con profesionales acreditados.',\r\n        'Asesoría Legal: Consultas legales relacionadas con la propiedad.',\r\n      ],\r\n      costMultiplier: 1.5,\r\n    },\r\n  };\r\n\r\n  const { propertyType, location, squareMeters, plan } = formData;\r\n\r\n  const fieldHandle = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    if (propertyType.trim() === '' || location.trim() === '' || squareMeters.trim() === '') {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n\r\n    const selectedProperty = datos.find(\r\n      (item) => item.tipo === propertyType && (item.categoria === 'ubicacion' || item.tipo === location)\r\n    );\r\n    const factor = selectedProperty ? selectedProperty.factor : 1.0;\r\n\r\n    const currentSelectedPlan = insurancePlans[plan] || insurancePlans.basic;\r\n\r\n    const baseCost =\r\n      getFinalBudget(2000, propertyType, location) * factor * parseFloat(squareMeters) * 35.86;\r\n    const totalCost = baseCost * currentSelectedPlan.costMultiplier;\r\n\r\n    setSelectedPlan(currentSelectedPlan);\r\n\r\n    setBudgetObj({\r\n      formData,\r\n      budgetAmount: totalCost,\r\n      selectedPlan: currentSelectedPlan,\r\n    });\r\n\r\n    // Aquí comienza la parte del localStorage\r\n    const historialCotizaciones = JSON.parse(localStorage.getItem('historialCotizaciones')) || [];\r\n\r\n    const isDuplicate = historialCotizaciones.some(\r\n      (item) =>\r\n        item.propiedad === propertyType &&\r\n        item.ubicacion === location &&\r\n        item.metrosCuadrados === parseFloat(squareMeters) &&\r\n        item.poliza === currentSelectedPlan.name\r\n    );\r\n\r\n    if (!isDuplicate) {\r\n      historialCotizaciones.push({\r\n        fechaCotizacion: new Date().toLocaleString(),\r\n        propiedad: propertyType,\r\n        ubicacion: location,\r\n        metrosCuadrados: parseFloat(squareMeters),\r\n        poliza: {\r\n          name: currentSelectedPlan.name,\r\n          cost: totalCost,\r\n          coverage: currentSelectedPlan.coverage,\r\n        },\r\n      });\r\n\r\n      localStorage.setItem('historialCotizaciones', JSON.stringify(historialCotizaciones));\r\n    }\r\n    // Aquí termina la parte del localStorage\r\n\r\n    setFormData({\r\n      propertyType: '',\r\n      location: '',\r\n      squareMeters: '',\r\n      plan: 'basic',\r\n    });\r\n  };\r\n\r\n  const propertyTypes = datos\r\n    .filter((item) => item.categoria === 'propiedad')\r\n    .map((item) => item.tipo);\r\n\r\n  const locationTypes = datos\r\n    .filter((item) => item.categoria === 'ubicacion')\r\n    .map((item) => item.tipo);\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      propertyType: '',\r\n      location: '',\r\n      squareMeters: '',\r\n      plan: 'basic',\r\n    });\r\n    setSelectedPlan(null);\r\n    setBudgetObj(null);\r\n  };\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <form onSubmit={submitForm}>\r\n        <div>\r\n          <label>Tipo de Propiedad:</label>\r\n          <select name=\"propertyType\" value={propertyType} onChange={fieldHandle}>\r\n            <option value=\"\">-- Seleccione --</option>\r\n            {propertyTypes.map((propertyType) => (\r\n              <option key={propertyType} value={propertyType}>\r\n                {propertyType}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label>Ubicación:</label>\r\n          <select name=\"location\" value={location} onChange={fieldHandle}>\r\n            <option value=\"\">-- Seleccione --</option>\r\n            {locationTypes.map((locationType) => (\r\n              <option key={locationType} value={locationType}>\r\n                {locationType}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label>Metros Cuadrados:</label>\r\n          <input type=\"number\" name=\"squareMeters\" value={squareMeters} onChange={fieldHandle} />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Plan de Seguro:</label>\r\n          <PlanContainer>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"plan\"\r\n                value=\"basic\"\r\n                checked={plan === 'basic'}\r\n                onChange={fieldHandle}\r\n              />\r\n              <strong>Plan Básico</strong>\r\n            </label>\r\n            <div>\r\n              <strong>Tipo:</strong> {insurancePlans.basic.name}\r\n            </div>\r\n            <div>\r\n              <strong>Cobertura:</strong>\r\n              <ul>\r\n                {insurancePlans.basic.coverage.map((item, index) => (\r\n                  <li key={index}>{item}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </PlanContainer>\r\n\r\n          <PlanContainer>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"plan\"\r\n                value=\"complete\"\r\n                checked={plan === 'complete'}\r\n                onChange={fieldHandle}\r\n              />\r\n              <strong>Plan Completo</strong>\r\n            </label>\r\n            <div>\r\n              <strong>Tipo:</strong> {insurancePlans.complete.name}\r\n            </div>\r\n            <div>\r\n              <strong>Cobertura:</strong>\r\n              <ul>\r\n                {insurancePlans.complete.coverage.map((item, index) => (\r\n                  <li key={index}>{item}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </PlanContainer>\r\n        </div>\r\n\r\n        <button type=\"submit\">Cotizar</button>\r\n\r\n        {error ? <div>Error: Completar los campos del formulario.</div> : null}\r\n      </form>\r\n\r\n      <ResetButton onClick={resetForm}>Reset</ResetButton>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}