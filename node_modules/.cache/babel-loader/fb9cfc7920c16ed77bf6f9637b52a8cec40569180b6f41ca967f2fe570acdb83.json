{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\front\\\\react\\\\tp_final\\\\src\\\\components\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport getFinalBudget from '../Helper';\nimport datos from '../datos.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  setBudgetObj\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    propertyType: '',\n    location: '',\n    squareMeters: '',\n    plan: 'basic'\n  });\n  const [error, setError] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const insurancePlans = {\n    basic: {\n      name: 'Plan Básico',\n      coverage: [`Cobertura Estándar:\n        Daños Estructurales: Cubre daños a la estructura de la propiedad debido a eventos como incendios, explosiones, inundaciones, etc.\n        Responsabilidad Civil: Protege contra reclamaciones de terceros por daños causados por la propiedad.\n      Asistencia 24/7:\n        Servicio de Emergencia: Asistencia telefónica para emergencias relacionadas con la propiedad.\n      Beneficios Adicionales:\n        Cobertura contra Incendios: Protección específica contra incendios.`],\n      costMultiplier: 1.2\n    },\n    complete: {\n      name: 'Plan Completo',\n      coverage: [`Cobertura Ampliada: \n        Daños Estructurales: Incluye cobertura para daños estructurales y colaterales más amplios.\n        Cobertura contra Robos: Protección contra robos y vandalismo.\n        Daños por Fenómenos Naturales: Incluye eventos como terremotos, tormentas, y otros desastres naturales.\n      Responsabilidad Extendida:\n        Responsabilidad Civil Ampliada: Mayor cobertura para reclamaciones de terceros.\n      Asistencia 24/7 con Servicios Adicionales:\n        Servicio de Reparaciones Rápidas: Coordinación de servicios de reparación con profesionales acreditados.\n        Asesoría Legal: Consultas legales relacionadas con la propiedad`],\n      costMultiplier: 1.5\n    }\n  };\n  const {\n    propertyType,\n    location,\n    squareMeters,\n    plan\n  } = formData;\n  const fieldHandle = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const submitForm = e => {\n    e.preventDefault();\n    if (propertyType.trim() === '' || location.trim() === '' || squareMeters.trim() === '') {\n      setError(true);\n      return;\n    }\n    setError(false);\n    const selectedProperty = datos.find(item => item.tipo === propertyType && (item.categoria === 'ubicacion' || item.tipo === location));\n    const factor = selectedProperty ? selectedProperty.factor : 1.0;\n    const currentSelectedPlan = insurancePlans[plan] || insurancePlans.basic;\n    const baseCost = getFinalBudget(2000, propertyType, location) * factor * parseFloat(squareMeters) * 35.86;\n    const totalCost = baseCost * currentSelectedPlan.costMultiplier;\n    setSelectedPlan(currentSelectedPlan);\n    setBudgetObj({\n      formData,\n      budgetAmount: totalCost,\n      selectedPlan: currentSelectedPlan\n    });\n\n    // Aquí comienza la parte del localStorage\n    const historialCotizaciones = JSON.parse(localStorage.getItem('historialCotizaciones')) || [];\n    const isDuplicate = historialCotizaciones.some(item => item.propiedad === propertyType && item.ubicacion === location && item.metrosCuadrados === parseFloat(squareMeters) && item.poliza === currentSelectedPlan.name);\n    if (!isDuplicate) {\n      historialCotizaciones.push({\n        fechaCotizacion: new Date().toLocaleString(),\n        propiedad: propertyType,\n        ubicacion: location,\n        metrosCuadrados: parseFloat(squareMeters),\n        poliza: {\n          name: currentSelectedPlan.name,\n          cost: totalCost,\n          coverage: currentSelectedPlan.coverage\n        }\n      });\n      localStorage.setItem('historialCotizaciones', JSON.stringify(historialCotizaciones));\n    }\n    // Aquí termina la parte del localStorage\n\n    setFormData({\n      propertyType: '',\n      location: '',\n      squareMeters: '',\n      plan: 'basic'\n    });\n  };\n  const propertyTypes = datos.filter(item => item.categoria === 'propiedad').map(item => item.tipo);\n  const locationTypes = datos.filter(item => item.categoria === 'ubicacion').map(item => item.tipo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tipo de Propiedad:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"propertyType\",\n          value: propertyType,\n          onChange: fieldHandle,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Seleccione --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), propertyTypes.map(propertyType => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: propertyType,\n            children: propertyType\n          }, propertyType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ubicaci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"location\",\n          value: location,\n          onChange: fieldHandle,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Seleccione --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), locationTypes.map(locationType => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: locationType,\n            children: locationType\n          }, locationType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Metros Cuadrados:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"squareMeters\",\n          value: squareMeters,\n          onChange: fieldHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Plan de Seguro:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"plan\",\n              value: \"basic\",\n              checked: plan === 'basic',\n              onChange: fieldHandle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), \"Plan B\\xE1sico\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cobertura:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), \" \", insurancePlans.basic.coverage.join(' ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"plan\",\n              value: \"complete\",\n              checked: plan === 'complete',\n              onChange: fieldHandle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), \"Plan Completo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cobertura:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), \" \", insurancePlans.complete.coverage.join(' ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cotizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error: Completar los campos del formulario.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 18\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"Wr83Emo9PKq8z7Fa0yXiUfNjp34=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","getFinalBudget","datos","jsxDEV","_jsxDEV","Form","setBudgetObj","_s","formData","setFormData","propertyType","location","squareMeters","plan","error","setError","selectedPlan","setSelectedPlan","insurancePlans","basic","name","coverage","costMultiplier","complete","fieldHandle","e","value","target","submitForm","preventDefault","trim","selectedProperty","find","item","tipo","categoria","factor","currentSelectedPlan","baseCost","parseFloat","totalCost","budgetAmount","historialCotizaciones","JSON","parse","localStorage","getItem","isDuplicate","some","propiedad","ubicacion","metrosCuadrados","poliza","push","fechaCotizacion","Date","toLocaleString","cost","setItem","stringify","propertyTypes","filter","map","locationTypes","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","locationType","type","checked","join","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/front/react/tp_final/src/components/Form.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport getFinalBudget from '../Helper';\r\nimport datos from '../datos.json';\r\n\r\nconst Form = ({ setBudgetObj }) => {\r\n  const [formData, setFormData] = useState({\r\n    propertyType: '',\r\n    location: '',\r\n    squareMeters: '',\r\n    plan: 'basic',\r\n  });\r\n\r\n  const [error, setError] = useState(false);\r\n  const [selectedPlan, setSelectedPlan] = useState(null);\r\n\r\n  const insurancePlans = {\r\n    basic: {\r\n      name: 'Plan Básico',\r\n      coverage: [`Cobertura Estándar:\r\n        Daños Estructurales: Cubre daños a la estructura de la propiedad debido a eventos como incendios, explosiones, inundaciones, etc.\r\n        Responsabilidad Civil: Protege contra reclamaciones de terceros por daños causados por la propiedad.\r\n      Asistencia 24/7:\r\n        Servicio de Emergencia: Asistencia telefónica para emergencias relacionadas con la propiedad.\r\n      Beneficios Adicionales:\r\n        Cobertura contra Incendios: Protección específica contra incendios.`],\r\n      costMultiplier: 1.2,\r\n    },\r\n    complete: {\r\n      name: 'Plan Completo',\r\n      coverage: [`Cobertura Ampliada: \r\n        Daños Estructurales: Incluye cobertura para daños estructurales y colaterales más amplios.\r\n        Cobertura contra Robos: Protección contra robos y vandalismo.\r\n        Daños por Fenómenos Naturales: Incluye eventos como terremotos, tormentas, y otros desastres naturales.\r\n      Responsabilidad Extendida:\r\n        Responsabilidad Civil Ampliada: Mayor cobertura para reclamaciones de terceros.\r\n      Asistencia 24/7 con Servicios Adicionales:\r\n        Servicio de Reparaciones Rápidas: Coordinación de servicios de reparación con profesionales acreditados.\r\n        Asesoría Legal: Consultas legales relacionadas con la propiedad`],\r\n      costMultiplier: 1.5,\r\n    },\r\n  };\r\n\r\n  const { propertyType, location, squareMeters, plan } = formData;\r\n\r\n  const fieldHandle = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    if (propertyType.trim() === '' || location.trim() === '' || squareMeters.trim() === '') {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n\r\n    const selectedProperty = datos.find(\r\n      (item) => item.tipo === propertyType && (item.categoria === 'ubicacion' || item.tipo === location)\r\n    );\r\n    const factor = selectedProperty ? selectedProperty.factor : 1.0;\r\n\r\n    const currentSelectedPlan = insurancePlans[plan] || insurancePlans.basic;\r\n\r\n    const baseCost =\r\n      getFinalBudget(2000, propertyType, location) * factor * parseFloat(squareMeters) * 35.86;\r\n    const totalCost = baseCost * currentSelectedPlan.costMultiplier;\r\n\r\n    setSelectedPlan(currentSelectedPlan);\r\n\r\n    setBudgetObj({\r\n      formData,\r\n      budgetAmount: totalCost,\r\n      selectedPlan: currentSelectedPlan,\r\n    });\r\n\r\n    // Aquí comienza la parte del localStorage\r\n    const historialCotizaciones = JSON.parse(localStorage.getItem('historialCotizaciones')) || [];\r\n\r\n    const isDuplicate = historialCotizaciones.some(\r\n      (item) =>\r\n        item.propiedad === propertyType &&\r\n        item.ubicacion === location &&\r\n        item.metrosCuadrados === parseFloat(squareMeters) &&\r\n        item.poliza === currentSelectedPlan.name\r\n    );\r\n\r\n    if (!isDuplicate) {\r\n      historialCotizaciones.push({\r\n        fechaCotizacion: new Date().toLocaleString(),\r\n        propiedad: propertyType,\r\n        ubicacion: location,\r\n        metrosCuadrados: parseFloat(squareMeters),\r\n        poliza: { \r\n          name: currentSelectedPlan.name,\r\n          cost: totalCost,\r\n          coverage: currentSelectedPlan.coverage,\r\n        },\r\n      });\r\n\r\n      localStorage.setItem('historialCotizaciones', JSON.stringify(historialCotizaciones));\r\n    }\r\n    // Aquí termina la parte del localStorage\r\n\r\n    setFormData({\r\n      propertyType: '',\r\n      location: '',\r\n      squareMeters: '',\r\n      plan: 'basic',\r\n    });\r\n  };\r\n\r\n  const propertyTypes = datos\r\n    .filter((item) => item.categoria === 'propiedad')\r\n    .map((item) => item.tipo);\r\n\r\n  const locationTypes = datos\r\n    .filter((item) => item.categoria === 'ubicacion')\r\n    .map((item) => item.tipo);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitForm}>\r\n        <div>\r\n          <label>Tipo de Propiedad:</label>\r\n          <select name=\"propertyType\" value={propertyType} onChange={fieldHandle}>\r\n            <option value=\"\">-- Seleccione --</option>\r\n            {propertyTypes.map((propertyType) => (\r\n              <option key={propertyType} value={propertyType}>\r\n                {propertyType}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label>Ubicación:</label>\r\n          <select name=\"location\" value={location} onChange={fieldHandle}>\r\n            <option value=\"\">-- Seleccione --</option>\r\n            {locationTypes.map((locationType) => (\r\n              <option key={locationType} value={locationType}>\r\n                {locationType}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label>Metros Cuadrados:</label>\r\n          <input type=\"number\" name=\"squareMeters\" value={squareMeters} onChange={fieldHandle} />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Plan de Seguro:</label>\r\n          <div>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"plan\"\r\n                value=\"basic\"\r\n                checked={plan === 'basic'}\r\n                onChange={fieldHandle}\r\n              />\r\n              Plan Básico\r\n            </label>\r\n            {/* <div>\r\n              <strong>Tipo:</strong> {insurancePlans.basic.name}\r\n            </div> */}\r\n            <div>\r\n              <strong>Cobertura:</strong> {insurancePlans.basic.coverage.join(' ')}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"plan\"\r\n                value=\"complete\"\r\n                checked={plan === 'complete'}\r\n                onChange={fieldHandle}\r\n              />\r\n              Plan Completo\r\n            </label>\r\n            {/* <div>\r\n              <strong>Tipo:</strong> {insurancePlans.complete.name}\r\n            </div> */}\r\n            <div>\r\n              <strong>Cobertura:</strong> {insurancePlans.complete.coverage.join(' ')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\">Cotizar</button>\r\n\r\n        {error ? <div>Error: Completar los campos del formulario.</div> : null}\r\n      </form>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}